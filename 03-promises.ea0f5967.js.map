{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAO,CACXC,KAAMC,SAASC,cAAc,SAC7BC,MAAOF,SAASC,cAAc,kBAC9BE,OAAQH,SAASC,cAAc,mBAC/BG,KAAMJ,SAASC,cAAc,iBAC7BI,UAAWL,SAASC,cAAc,oBAKpC,SAASK,EAAcC,EAAUL,GAC/B,OAAO,IAAIM,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,WACLH,EACFF,EAAQ,CAAEF,WAAUL,UAEpBQ,EAAO,CAAEH,WAAUL,S,GAEpBA,E,IAXPJ,EAAKO,UAAUU,iBAAiB,SAehC,SAA0BC,GACxBA,EAAMC,iBAMN,IAJA,IAAIC,EAAapB,EAAKI,MAAMiB,cACtBC,EAAYtB,EAAKM,KAAKe,cACtBE,EAAcvB,EAAKK,OAAOgB,cAEvBG,EAAI,EAAGA,GAAKD,EAAaC,GAAK,EACrChB,EAAcgB,EAAGJ,GACdK,MAAK,SAAAC,G,IAAGjB,EAAQiB,EAARjB,SAAUL,EAAKsB,EAALtB,MACjBuB,EAAA7B,GAAS8B,OAAOC,QACd,uBAAwCC,OAAfrB,EAAS,QAAYqB,OAAN1B,EAAM,M,IAGjD2B,OAAM,SAAAL,G,IAAGjB,EAAQiB,EAARjB,SAAUL,EAAKsB,EAALtB,MAClBuB,EAAA7B,GAAS8B,OAAOI,QACd,sBAAqCF,OAAfrB,EAAS,QAAYqB,OAAN1B,EAAM,M,IAGjDgB,GAAcE,C","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst refs = {\n  form: document.querySelector('.form'),\n  delay: document.querySelector('[name=\"delay\"]'),\n  amount: document.querySelector('[name=\"amount\"]'),\n  step: document.querySelector('[name=\"step\"]'),\n  submitBtn: document.querySelector('[type=\"submit\"]'),\n};\n\nrefs.submitBtn.addEventListener('click', onSubmitBtnClick);\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\nfunction onSubmitBtnClick(event) {\n  event.preventDefault();\n\n  let delayValue = refs.delay.valueAsNumber;\n  const stepValue = refs.step.valueAsNumber;\n  const amountValue = refs.amount.valueAsNumber;\n\n  for (let i = 1; i <= amountValue; i += 1) {\n    createPromise(i, delayValue)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`\n        );\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`\n        );\n      });\n    delayValue += stepValue;\n  }\n}\n"],"names":["$iU1Pc","parcelRequire","$ce04d3a99e08e73b$var$refs","form","document","querySelector","delay","amount","step","submitBtn","$ce04d3a99e08e73b$var$createPromise","position","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","addEventListener","event","preventDefault","delayValue","valueAsNumber","stepValue","amountValue","i","then","param","$parcel$interopDefault","Notify","success","concat","catch","failure"],"version":3,"file":"03-promises.ea0f5967.js.map"}